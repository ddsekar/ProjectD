function buildAssociationGroups(data) {
  const allKeys = data.flatMap(row => Object.keys(row.associations || {}));
  const grouped = {};

  for (const key of allKeys) {
    const [parent, child] = key.split('.');
    if (!grouped[parent]) grouped[parent] = [];
    if (!grouped[parent].includes(child)) grouped[parent].push(child);
  }

  return Object.entries(grouped).map(([parent, children]) => ({
    headerName: parent,
    children: children.map(child => ({
      headerName: child,
      valueGetter: params => params.data?.associations?.[`${parent}.${child}`]
    }))
  }));
}

const columnDefs = [
  { field: 'name' },
  { field: 'age' },
  ...buildAssociationGroups(rowData)
];
